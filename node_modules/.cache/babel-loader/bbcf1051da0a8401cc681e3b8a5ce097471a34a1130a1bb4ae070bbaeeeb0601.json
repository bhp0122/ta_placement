{"ast":null,"code":"var _jsxFileName = \"/Users/bhumipatel/workspace/dev_row_align/src/components/LoadingBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingBar = props => {\n  const {\n    progress\n  } = props;\n\n  //   useEffect(() => {\n  //     // Simulating loading progress with a timer\n  //     const timer = setInterval(() => {\n  //       setProgress((prevProgress) => {\n  //         if (prevProgress >= 100) {\n  //           clearInterval(timer);\n  //           return 100;\n  //         }\n  //         return prevProgress + 10;\n  //       });\n  //     }, 1000);\n\n  //     return () => {\n  //       clearInterval(timer);\n  //     };\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      style: {\n        width: `${progress}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingBar;\nexport default LoadingBar;\nvar _c;\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoadingBar","props","progress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/bhumipatel/workspace/dev_row_align/src/components/LoadingBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LoadingBar = (props) => {\r\n  const {progress} = props\r\n\r\n//   useEffect(() => {\r\n//     // Simulating loading progress with a timer\r\n//     const timer = setInterval(() => {\r\n//       setProgress((prevProgress) => {\r\n//         if (prevProgress >= 100) {\r\n//           clearInterval(timer);\r\n//           return 100;\r\n//         }\r\n//         return prevProgress + 10;\r\n//       });\r\n//     }, 1000);\r\n\r\n//     return () => {\r\n//       clearInterval(timer);\r\n//     };\r\n//   }, []);\r\n\r\n  return (\r\n    <div className=\"loading-bar\">\r\n\t\t<h1>progress</h1>\r\n    \t<div className=\"progress\" style={{ width: `${progress}%` }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAACC;EAAQ,CAAC,GAAGD,KAAK;;EAE1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEE,oBACEF,OAAA;IAAKI,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC9BL,OAAA;MAAAK,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdT,OAAA;MAAKI,SAAS,EAAC,UAAU;MAACM,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAER,QAAS;MAAG;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7D;AAEV,CAAC;AAACG,EAAA,GA1BIX,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}