{"ast":null,"code":"import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nconst handleCourseFilter = event => {\n  setCourseValue(event.target.value);\n};\nconst handleTaFilter = event => {\n  setTaValue(event.target.value);\n};\nfunction removeDuplicates(coursesList) {\n  let arr = [];\n  console.log(coursesList);\n  for (let i in coursesList) {\n    if (!arr.includes(coursesList[i][\"course_number\"])) {\n      arr.push(coursesList[i][\"course_number\"]);\n    }\n  }\n  return arr.sort();\n}\nfunction filterSchedule(schedule, filterCourseValue, filterTaValue) {\n  let filteredSchedule = {};\n  if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (course_name(courseKey) == filterCourseValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (schedule[courseKey][0][0] == filterTaValue || schedule[courseKey][1][0] == filterTaValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (course_name(courseKey) == filterCourseValue && (schedule[courseKey][0][0] == filterTaValue || schedule[courseKey][1][0] == filterTaValue)) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else {\n    return schedule;\n  }\n  return filteredSchedule;\n}\nfunction filterConflict(report, filterCourseValue, filterTaValue) {\n  if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (conflict[1] == filterTaValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (course_name(conflict[0]) == filterCourseValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (course_name(conflict[0]) == filterCourseValue && conflict[1] == filterTaValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else {\n    return report;\n  }\n}\nexport { handleCourseFilter, handleTaFilter, removeDuplicates, filterConflict, filterSchedule };","map":{"version":3,"names":["React","useState","handleCourseFilter","event","setCourseValue","target","value","handleTaFilter","setTaValue","removeDuplicates","coursesList","arr","console","log","i","includes","push","sort","filterSchedule","schedule","filterCourseValue","filterTaValue","filteredSchedule","Object","keys","filter","courseKey","course_name","map","filterConflict","report","filteredConflicts","conflict"],"sources":["/Users/bhumipatel/workspace/filter_dev/src/components/layoutHandlers/filterComponents.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst handleCourseFilter = (event) => {\n    setCourseValue(event.target.value);\n}\n\nconst handleTaFilter= (event) => {\n    setTaValue(event.target.value);\n}\n\nfunction removeDuplicates(coursesList) {\n    let arr = [];\n    console.log(coursesList);\n    for (let i in coursesList) {\n        if (!arr.includes(coursesList[i][\"course_number\"])) {\n            arr.push(coursesList[i][\"course_number\"]);\n        }\n    }\n    return arr.sort();\n}\n\nfunction filterSchedule(schedule, filterCourseValue, filterTaValue) {\n    let filteredSchedule = {};\n    if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if (course_name(courseKey) == filterCourseValue) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];    \n        })\n    }\n    else if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if ((schedule[courseKey][0][0] == filterTaValue) || (schedule[courseKey][1][0] == filterTaValue)) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];\n        })    \n    }\n    else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if ((course_name(courseKey) == filterCourseValue) && ((schedule[courseKey][0][0] == filterTaValue) || (schedule[courseKey][1][0] == filterTaValue))) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];\n        })    \n    }\n    else {\n        return schedule;\n    }\n    return filteredSchedule;    \n}\n\nfunction filterConflict(report, filterCourseValue, filterTaValue) {\n    if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n        let filteredConflicts = report.filter(conflict => {\n            if (conflict[1] == filterTaValue) {\n                return true;\n            }\n            return false;\n        }).map(conflict => {\n            return conflict;\n        })\n        \n        return filteredConflicts;\n    }\n    else if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n        let filteredConflicts = report.filter(conflict =>\n            {\n                if (course_name(conflict[0]) == filterCourseValue) {\n                    return true;\n                }\n                return false;\n            }).map(conflict => {\n                return conflict;\n            })\n\n            return filteredConflicts;\n    } \n    else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n        let filteredConflicts = report.filter(conflict =>\n            {\n                if (course_name(conflict[0]) == filterCourseValue && conflict[1] == filterTaValue) {\n                    return true;\n                }\n                return false;\n            }).map(conflict => {\n                return conflict;\n            })\n\n            return filteredConflicts;\n    }\n    else {\n        return report;\n    }  \n}\n\nexport { handleCourseFilter, handleTaFilter, removeDuplicates, filterConflict, filterSchedule }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}