{"ast":null,"code":"import React from \"react\";\nexport function course_name(coursesList) {\n  const current_course = coursesList.find(c => c.CRN === course);\n  const course_name = current_course.course_number;\n  return course_name;\n}\nexport function removeDuplicates(coursesList) {\n  let arr = [];\n  for (let i in coursesList) {\n    if (!arr.includes(coursesList[i][\"course_number\"])) {\n      arr.push(coursesList[i][\"course_number\"]);\n    }\n  }\n  return arr.sort();\n}\nexport function filterSchedule(schedule, filterCourseValue, filterTaValue) {\n  let filteredSchedule = {};\n  if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (course_name(courseKey) == filterCourseValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (schedule[courseKey][0][0] == filterTaValue || schedule[courseKey][1][0] == filterTaValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n    Object.keys(schedule).filter(courseKey => {\n      if (course_name(courseKey) == filterCourseValue && (schedule[courseKey][0][0] == filterTaValue || schedule[courseKey][1][0] == filterTaValue)) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(courseKey => {\n      filteredSchedule[courseKey] = schedule[courseKey];\n    });\n  } else {\n    return schedule;\n  }\n  return filteredSchedule;\n}\nexport function filterConflict(report, filterCourseValue, filterTaValue) {\n  if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (conflict[1] == filterTaValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (course_name(conflict[0]) == filterCourseValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n    let filteredConflicts = report.filter(conflict => {\n      if (course_name(conflict[0]) == filterCourseValue && conflict[1] == filterTaValue) {\n        return true;\n      }\n      return false;\n    }).map(conflict => {\n      return conflict;\n    });\n    return filteredConflicts;\n  } else {\n    return report;\n  }\n}","map":{"version":3,"names":["React","course_name","coursesList","current_course","find","c","CRN","course","course_number","removeDuplicates","arr","i","includes","push","sort","filterSchedule","schedule","filterCourseValue","filterTaValue","filteredSchedule","Object","keys","filter","courseKey","map","filterConflict","report","filteredConflicts","conflict"],"sources":["/Users/bhumipatel/workspace/filter_dev/src/components/layoutHandlers/filterComponents.js"],"sourcesContent":["import React from \"react\";\n\nexport function course_name(coursesList){\n    const current_course = coursesList.find(c => c.CRN === course);\n    const course_name = current_course.course_number;\n    return course_name;\n}\n\nexport function removeDuplicates(coursesList) {\n    let arr = [];\n    for (let i in coursesList) {\n        if (!arr.includes(coursesList[i][\"course_number\"])) {\n            arr.push(coursesList[i][\"course_number\"]);\n        }\n    }\n    return arr.sort();\n}\n\nexport function filterSchedule(schedule, filterCourseValue, filterTaValue) {\n    let filteredSchedule = {};\n    if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if (course_name(courseKey) == filterCourseValue) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];    \n        })\n    }\n    else if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if ((schedule[courseKey][0][0] == filterTaValue) || (schedule[courseKey][1][0] == filterTaValue)) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];\n        })    \n    }\n    else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n        Object.keys(schedule).filter(courseKey => {\n            if ((course_name(courseKey) == filterCourseValue) && ((schedule[courseKey][0][0] == filterTaValue) || (schedule[courseKey][1][0] == filterTaValue))) {\n                return true;\n            } else {\n                return false;\n            }\n        }).map(courseKey => {\n            filteredSchedule[courseKey] = schedule[courseKey];\n        })    \n    }\n    else {\n        return schedule;\n    }\n    return filteredSchedule;    \n}\n\nexport function filterConflict(report, filterCourseValue, filterTaValue) {\n    if (filterCourseValue == \"None\" && filterTaValue != \"None\") {\n        let filteredConflicts = report.filter(conflict => {\n            if (conflict[1] == filterTaValue) {\n                return true;\n            }\n            return false;\n        }).map(conflict => {\n            return conflict;\n        })\n        \n        return filteredConflicts;\n    }\n    else if (filterCourseValue != \"None\" && filterTaValue == \"None\") {\n        let filteredConflicts = report.filter(conflict =>\n            {\n                if (course_name(conflict[0]) == filterCourseValue) {\n                    return true;\n                }\n                return false;\n            }).map(conflict => {\n                return conflict;\n            })\n\n            return filteredConflicts;\n    } \n    else if (filterCourseValue != \"None\" && filterTaValue != \"None\") {\n        let filteredConflicts = report.filter(conflict =>\n            {\n                if (course_name(conflict[0]) == filterCourseValue && conflict[1] == filterTaValue) {\n                    return true;\n                }\n                return false;\n            }).map(conflict => {\n                return conflict;\n            })\n\n            return filteredConflicts;\n    }\n    else {\n        return report;\n    }  \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}